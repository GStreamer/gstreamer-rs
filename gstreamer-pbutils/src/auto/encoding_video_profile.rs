// This file was generated by gir (https://github.com/gtk-rs/gir)
// from gir-files (https://github.com/gtk-rs/gir-files)
// from gst-gir-files (https://gitlab.freedesktop.org/gstreamer/gir-files-rs.git)
// DO NOT EDIT

use crate::{ffi, EncodingProfile};
use glib::translate::*;

glib::wrapper! {
    #[doc(alias = "GstEncodingVideoProfile")]
    pub struct EncodingVideoProfile(Object<ffi::GstEncodingVideoProfile, ffi::GstEncodingVideoProfileClass>) @extends EncodingProfile;

    match fn {
        type_ => || ffi::gst_encoding_video_profile_get_type(),
    }
}

impl EncodingVideoProfile {
    #[doc(alias = "gst_encoding_video_profile_get_pass")]
    #[doc(alias = "get_pass")]
    pub fn pass(&self) -> u32 {
        unsafe { ffi::gst_encoding_video_profile_get_pass(self.to_glib_none().0) }
    }

    #[doc(alias = "gst_encoding_video_profile_get_variableframerate")]
    #[doc(alias = "get_variableframerate")]
    pub fn is_variableframerate(&self) -> bool {
        unsafe {
            from_glib(ffi::gst_encoding_video_profile_get_variableframerate(
                self.to_glib_none().0,
            ))
        }
    }
}

unsafe impl Send for EncodingVideoProfile {}
unsafe impl Sync for EncodingVideoProfile {}
