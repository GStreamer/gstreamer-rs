// This file was generated by gir (https://github.com/gtk-rs/gir)
// from gir-files (https://github.com/gtk-rs/gir-files)
// from gst-gir-files (https://gitlab.freedesktop.org/gstreamer/gir-files-rs.git)
// DO NOT EDIT

use crate::DiscovererStreamInfo;
use glib::translate::*;

glib::wrapper! {
    #[doc(alias = "GstDiscovererVideoInfo")]
    pub struct DiscovererVideoInfo(Object<ffi::GstDiscovererVideoInfo>) @extends DiscovererStreamInfo;

    match fn {
        type_ => || ffi::gst_discoverer_video_info_get_type(),
    }
}

impl DiscovererVideoInfo {
    #[doc(alias = "gst_discoverer_video_info_get_bitrate")]
    #[doc(alias = "get_bitrate")]
    pub fn bitrate(&self) -> u32 {
        unsafe { ffi::gst_discoverer_video_info_get_bitrate(self.to_glib_none().0) }
    }

    #[doc(alias = "gst_discoverer_video_info_get_depth")]
    #[doc(alias = "get_depth")]
    pub fn depth(&self) -> u32 {
        unsafe { ffi::gst_discoverer_video_info_get_depth(self.to_glib_none().0) }
    }

    #[doc(alias = "gst_discoverer_video_info_get_height")]
    #[doc(alias = "get_height")]
    pub fn height(&self) -> u32 {
        unsafe { ffi::gst_discoverer_video_info_get_height(self.to_glib_none().0) }
    }

    #[doc(alias = "gst_discoverer_video_info_get_max_bitrate")]
    #[doc(alias = "get_max_bitrate")]
    pub fn max_bitrate(&self) -> u32 {
        unsafe { ffi::gst_discoverer_video_info_get_max_bitrate(self.to_glib_none().0) }
    }

    #[doc(alias = "gst_discoverer_video_info_get_width")]
    #[doc(alias = "get_width")]
    pub fn width(&self) -> u32 {
        unsafe { ffi::gst_discoverer_video_info_get_width(self.to_glib_none().0) }
    }

    #[doc(alias = "gst_discoverer_video_info_is_image")]
    pub fn is_image(&self) -> bool {
        unsafe {
            from_glib(ffi::gst_discoverer_video_info_is_image(
                self.to_glib_none().0,
            ))
        }
    }

    #[doc(alias = "gst_discoverer_video_info_is_interlaced")]
    pub fn is_interlaced(&self) -> bool {
        unsafe {
            from_glib(ffi::gst_discoverer_video_info_is_interlaced(
                self.to_glib_none().0,
            ))
        }
    }
}

unsafe impl Send for DiscovererVideoInfo {}
unsafe impl Sync for DiscovererVideoInfo {}
