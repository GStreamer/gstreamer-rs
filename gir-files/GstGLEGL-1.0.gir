<?xml version="1.0"?>
<!-- This file was automatically generated from C sources - DO NOT EDIT!
To affect the contents of this file, edit the original C definitions,
and/or use gtk-doc annotations.  -->
<repository xmlns="http://www.gtk.org/introspection/core/1.0" xmlns:c="http://www.gtk.org/introspection/c/1.0" xmlns:glib="http://www.gtk.org/introspection/glib/1.0" version="1.2">
  <include name="Gst" version="1.0"/>
  <include name="GstBase" version="1.0"/>
  <include name="GstGL" version="1.0"/>
  <include name="GstVideo" version="1.0"/>
  <package name="gstreamer-gl-egl-1.0"/>
  <c:include name="gst/gl/gl.h"/>
  <namespace name="GstGLEGL" version="1.0" shared-library="libgstgl-1.0.so.0" c:identifier-prefixes="Gst" c:symbol-prefixes="gst">
    
    
    
    
    <class name="GLDisplayEGL" c:symbol-prefix="gl_display_egl" c:type="GstGLDisplayEGL" parent="GstGL.GLDisplay" glib:type-name="GstGLDisplayEGL" glib:get-type="gst_gl_display_egl_get_type" glib:type-struct="GLDisplayEGLClass">
      <doc xml:space="preserve">the contents of a #GstGLDisplayEGL are private and should only be accessed
through the provided API</doc>
      
      <constructor name="new" c:identifier="gst_gl_display_egl_new">
        <doc xml:space="preserve">Create a new #GstGLDisplayEGL using the default EGL_DEFAULT_DISPLAY.</doc>
        
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">a new #GstGLDisplayEGL or %NULL</doc>
          <type name="GLDisplayEGL" c:type="GstGLDisplayEGL*"/>
        </return-value>
      </constructor>
      <constructor name="new_with_egl_display" c:identifier="gst_gl_display_egl_new_with_egl_display">
        
        <return-value transfer-ownership="none">
          <type name="GLDisplayEGL" c:type="GstGLDisplayEGL*"/>
        </return-value>
        <parameters>
          <parameter name="display" transfer-ownership="none" nullable="1" allow-none="1">
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </constructor>
      <function name="from_gl_display" c:identifier="gst_gl_display_egl_from_gl_display" version="1.12">
        <doc xml:space="preserve">Creates a EGL display connection from a native Display.

This function will return the same value for multiple calls with the same
@display.</doc>
        
        <return-value transfer-ownership="full">
          <doc xml:space="preserve">a new #GstGLDisplayEGL</doc>
          <type name="GLDisplayEGL" c:type="GstGLDisplayEGL*"/>
        </return-value>
        <parameters>
          <parameter name="display" transfer-ownership="none">
            <doc xml:space="preserve">an existing #GstGLDisplay</doc>
            <type name="GstGL.GLDisplay" c:type="GstGLDisplay*"/>
          </parameter>
        </parameters>
      </function>
      <function name="get_from_native" c:identifier="gst_gl_display_egl_get_from_native" version="1.12">
        <doc xml:space="preserve">Attempts to create a new `EGLDisplay` from @display.  If @type is
%GST_GL_DISPLAY_TYPE_ANY, then @display must be 0. @type must not be
%GST_GL_DISPLAY_TYPE_NONE.</doc>
        
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve">A `EGLDisplay` or `EGL_NO_DISPLAY`</doc>
          <type name="gpointer" c:type="gpointer"/>
        </return-value>
        <parameters>
          <parameter name="type" transfer-ownership="none">
            <doc xml:space="preserve">a #GstGLDisplayType</doc>
            <type name="GstGL.GLDisplayType" c:type="GstGLDisplayType"/>
          </parameter>
          <parameter name="display" transfer-ownership="none">
            <doc xml:space="preserve">pointer to a display (or 0)</doc>
            <type name="guintptr" c:type="guintptr"/>
          </parameter>
        </parameters>
      </function>
      <field name="parent">
        <type name="GstGL.GLDisplay" c:type="GstGLDisplay"/>
      </field>
      <field name="display" readable="0" private="1">
        <type name="gpointer" c:type="gpointer"/>
      </field>
      <field name="foreign_display" readable="0" private="1">
        <type name="gboolean" c:type="gboolean"/>
      </field>
      <field name="_padding" readable="0" private="1">
        <array zero-terminated="0" fixed-size="4">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </class>
    <record name="GLDisplayEGLClass" c:type="GstGLDisplayEGLClass" glib:is-gtype-struct-for="GLDisplayEGL">
      
      <field name="object_class">
        <type name="GstGL.GLDisplayClass" c:type="GstGLDisplayClass"/>
      </field>
      <field name="_padding">
        <array zero-terminated="0" fixed-size="4">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    
    
    
    
    
    <function-macro name="GL_DISPLAY_EGL" c:identifier="GST_GL_DISPLAY_EGL" introspectable="0">
      
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="GL_DISPLAY_EGL_CAST" c:identifier="GST_GL_DISPLAY_EGL_CAST" introspectable="0">
      
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="GL_DISPLAY_EGL_CLASS" c:identifier="GST_GL_DISPLAY_EGL_CLASS" introspectable="0">
      
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="GL_DISPLAY_EGL_DEVICE" c:identifier="GST_GL_DISPLAY_EGL_DEVICE" introspectable="0">
      
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="GL_DISPLAY_EGL_DEVICE_CAST" c:identifier="GST_GL_DISPLAY_EGL_DEVICE_CAST" introspectable="0">
      
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="GL_DISPLAY_EGL_DEVICE_CLASS" c:identifier="GST_GL_DISPLAY_EGL_DEVICE_CLASS" introspectable="0">
      
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <constant name="GL_DISPLAY_EGL_NAME" value="gst.gl.display.egl" c:type="GST_GL_DISPLAY_EGL_NAME">
      
      <type name="utf8" c:type="gchar*"/>
    </constant>
    
    
    
    
    
    
    <function-macro name="IS_GL_DISPLAY_EGL" c:identifier="GST_IS_GL_DISPLAY_EGL" introspectable="0">
      
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_GL_DISPLAY_EGL_CLASS" c:identifier="GST_IS_GL_DISPLAY_EGL_CLASS" introspectable="0">
      
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_GL_DISPLAY_EGL_DEVICE" c:identifier="GST_IS_GL_DISPLAY_EGL_DEVICE" introspectable="0">
      
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_GL_DISPLAY_EGL_DEVICE_CLASS" c:identifier="GST_IS_GL_DISPLAY_EGL_DEVICE_CLASS" introspectable="0">
      
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    
    
    
    
    
    
    
    
    
  </namespace>
</repository>
