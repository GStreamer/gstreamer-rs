// This file was generated by gir (https://github.com/gtk-rs/gir)
// from gir-files (https://github.com/gtk-rs/gir-files)
// from gst-gir-files (https://gitlab.freedesktop.org/gstreamer/gir-files-rs.git)
// DO NOT EDIT

use glib::{prelude::*, translate::*};

glib::wrapper! {
    #[doc(alias = "GstFdAllocator")]
    pub struct FdAllocator(Object<ffi::GstFdAllocator, ffi::GstFdAllocatorClass>) @extends gst::Allocator;

    match fn {
        type_ => || ffi::gst_fd_allocator_get_type(),
    }
}

impl FdAllocator {
    pub const NONE: Option<&'static FdAllocator> = None;

    #[doc(alias = "gst_fd_allocator_new")]
    pub fn new() -> FdAllocator {
        assert_initialized_main_thread!();
        unsafe { gst::Allocator::from_glib_full(ffi::gst_fd_allocator_new()).unsafe_cast() }
    }
}

impl Default for FdAllocator {
    fn default() -> Self {
        Self::new()
    }
}

unsafe impl Send for FdAllocator {}
unsafe impl Sync for FdAllocator {}
