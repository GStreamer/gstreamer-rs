// This file was generated by gir (https://github.com/gtk-rs/gir)
// from gir-files (https://github.com/gtk-rs/gir-files)
// from gst-gir-files (https://gitlab.freedesktop.org/gstreamer/gir-files-rs.git)
// DO NOT EDIT

use crate::ffi;
use glib::prelude::*;

glib::wrapper! {
    #[doc(alias = "GstPlayerVideoRenderer")]
    pub struct PlayerVideoRenderer(Interface<ffi::GstPlayerVideoRenderer, ffi::GstPlayerVideoRendererInterface>);

    match fn {
        type_ => || ffi::gst_player_video_renderer_get_type(),
    }
}

impl PlayerVideoRenderer {
    pub const NONE: Option<&'static PlayerVideoRenderer> = None;
}

unsafe impl Send for PlayerVideoRenderer {}
unsafe impl Sync for PlayerVideoRenderer {}

mod sealed {
    pub trait Sealed {}
    impl<T: super::IsA<super::PlayerVideoRenderer>> Sealed for T {}
}

pub trait PlayerVideoRendererExt: IsA<PlayerVideoRenderer> + sealed::Sealed + 'static {}

impl<O: IsA<PlayerVideoRenderer>> PlayerVideoRendererExt for O {}
