// This file was generated by gir (https://github.com/gtk-rs/gir)
// from gir-files (https://github.com/gtk-rs/gir-files)
// from gst-gir-files (https://gitlab.freedesktop.org/gstreamer/gir-files-rs.git)
// DO NOT EDIT

use glib::prelude::*;

glib::wrapper! {
    #[doc(alias = "GstPlayerSignalDispatcher")]
    pub struct PlayerSignalDispatcher(Interface<ffi::GstPlayerSignalDispatcher, ffi::GstPlayerSignalDispatcherInterface>);

    match fn {
        type_ => || ffi::gst_player_signal_dispatcher_get_type(),
    }
}

impl PlayerSignalDispatcher {
    pub const NONE: Option<&'static PlayerSignalDispatcher> = None;
}

unsafe impl Send for PlayerSignalDispatcher {}
unsafe impl Sync for PlayerSignalDispatcher {}

mod sealed {
    pub trait Sealed {}
    impl<T: super::IsA<super::PlayerSignalDispatcher>> Sealed for T {}
}

pub trait PlayerSignalDispatcherExt:
    IsA<PlayerSignalDispatcher> + sealed::Sealed + 'static
{
}

impl<O: IsA<PlayerSignalDispatcher>> PlayerSignalDispatcherExt for O {}
