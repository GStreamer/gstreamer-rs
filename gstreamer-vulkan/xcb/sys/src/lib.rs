// This file was generated by gir (https://github.com/gtk-rs/gir)
// from gir-files (https://github.com/gtk-rs/gir-files)
// from gst-gir-files (https://gitlab.freedesktop.org/gstreamer/gir-files-rs.git)
// DO NOT EDIT

#![allow(non_camel_case_types, non_upper_case_globals, non_snake_case)]
#![allow(
    clippy::approx_constant,
    clippy::type_complexity,
    clippy::unreadable_literal,
    clippy::upper_case_acronyms
)]
#![cfg_attr(docsrs, feature(doc_cfg))]

use glib_sys as glib;
use gstreamer_vulkan_sys as gst_vulkan;

#[allow(unused_imports)]
use libc::{
    c_char, c_double, c_float, c_int, c_long, c_short, c_uchar, c_uint, c_ulong, c_ushort, c_void,
    intptr_t, off_t, size_t, ssize_t, time_t, uintptr_t, FILE,
};
#[cfg(unix)]
#[allow(unused_imports)]
use libc::{dev_t, gid_t, pid_t, socklen_t, uid_t};

#[allow(unused_imports)]
use glib::{gboolean, gconstpointer, gpointer, GType};

// Records
#[derive(Copy, Clone)]
#[repr(C)]
pub struct GstVulkanDisplayXCBClass {
    pub object_class: gst_vulkan::GstVulkanDisplayClass,
    pub _reserved: [gpointer; 4],
}

impl ::std::fmt::Debug for GstVulkanDisplayXCBClass {
    fn fmt(&self, f: &mut ::std::fmt::Formatter) -> ::std::fmt::Result {
        f.debug_struct(&format!("GstVulkanDisplayXCBClass @ {self:p}"))
            .field("object_class", &self.object_class)
            .finish()
    }
}

// Classes
#[repr(C)]
pub struct GstVulkanDisplayXCB {
    _data: [u8; 0],
    _marker: core::marker::PhantomData<(*mut u8, core::marker::PhantomPinned)>,
}

impl ::std::fmt::Debug for GstVulkanDisplayXCB {
    fn fmt(&self, f: &mut ::std::fmt::Formatter) -> ::std::fmt::Result {
        f.debug_struct(&format!("GstVulkanDisplayXCB @ {self:p}"))
            .finish()
    }
}

#[link(name = "gstvulkan-1.0")]
extern "C" {

    //=========================================================================
    // GstVulkanDisplayXCB
    //=========================================================================
    pub fn gst_vulkan_display_xcb_get_type() -> GType;
    pub fn gst_vulkan_display_xcb_new(name: *const c_char) -> *mut GstVulkanDisplayXCB;

}
