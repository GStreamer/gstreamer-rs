// This file was generated by gir (https://github.com/gtk-rs/gir)
// from gir-files (https://github.com/gtk-rs/gir-files)
// from gst-gir-files (https://gitlab.freedesktop.org/gstreamer/gir-files-rs.git)
// DO NOT EDIT

use crate::ffi;
use glib::translate::*;

glib::wrapper! {
    #[doc(alias = "GstVulkanDisplayXCB")]
    pub struct VulkanDisplayXCB(Object<ffi::GstVulkanDisplayXCB, ffi::GstVulkanDisplayXCBClass>) @extends gst::Object;

    match fn {
        type_ => || ffi::gst_vulkan_display_xcb_get_type(),
    }
}

impl VulkanDisplayXCB {
    #[doc(alias = "gst_vulkan_display_xcb_new")]
    pub fn new(name: Option<&str>) -> Result<VulkanDisplayXCB, glib::BoolError> {
        assert_initialized_main_thread!();
        unsafe {
            Option::<_>::from_glib_full(ffi::gst_vulkan_display_xcb_new(name.to_glib_none().0))
                .ok_or_else(|| glib::bool_error!("Failed to create XCB display"))
        }
    }
}

unsafe impl Send for VulkanDisplayXCB {}
unsafe impl Sync for VulkanDisplayXCB {}
