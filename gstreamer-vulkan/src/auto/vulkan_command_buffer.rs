// This file was generated by gir (https://github.com/gtk-rs/gir)
// from gir-files (https://github.com/gtk-rs/gir-files)
// from gst-gir-files (https://gitlab.freedesktop.org/gstreamer/gir-files-rs.git)
// DO NOT EDIT

glib::wrapper! {
    #[derive(Debug, PartialEq, Eq, PartialOrd, Ord, Hash)]
    pub struct VulkanCommandBuffer(Boxed<ffi::GstVulkanCommandBuffer>);

    match fn {
        copy => |ptr| glib::gobject_ffi::g_boxed_copy(ffi::gst_vulkan_command_buffer_get_type(), ptr as *mut _) as *mut ffi::GstVulkanCommandBuffer,
        free => |ptr| glib::gobject_ffi::g_boxed_free(ffi::gst_vulkan_command_buffer_get_type(), ptr as *mut _),
        type_ => || ffi::gst_vulkan_command_buffer_get_type(),
    }
}

impl VulkanCommandBuffer {
    //#[doc(alias = "gst_vulkan_command_buffer_new_wrapped")]
    //pub fn new_wrapped(cmd: /*Ignored*/&vulkan::CommandBuffer, level: /*Ignored*/&vulkan::CommandBufferLevel) -> VulkanCommandBuffer {
    //    unsafe { TODO: call ffi:gst_vulkan_command_buffer_new_wrapped() }
    //}
}

unsafe impl Send for VulkanCommandBuffer {}
unsafe impl Sync for VulkanCommandBuffer {}
