// This file was generated by gir (https://github.com/gtk-rs/gir)
// from gir-files (https://github.com/gtk-rs/gir-files)
// from gst-gir-files (https://gitlab.freedesktop.org/gstreamer/gir-files-rs.git)
// DO NOT EDIT

use crate::ffi;

glib::wrapper! {
    #[derive(Debug, PartialEq, Eq, PartialOrd, Ord, Hash)]
    pub struct VulkanHandle(Boxed<ffi::GstVulkanHandle>);

    match fn {
        copy => |ptr| glib::gobject_ffi::g_boxed_copy(ffi::gst_vulkan_handle_get_type(), ptr as *mut _) as *mut ffi::GstVulkanHandle,
        free => |ptr| glib::gobject_ffi::g_boxed_free(ffi::gst_vulkan_handle_get_type(), ptr as *mut _),
        type_ => || ffi::gst_vulkan_handle_get_type(),
    }
}

impl VulkanHandle {
    //#[doc(alias = "gst_vulkan_handle_new_wrapped")]
    //pub fn new_wrapped<P: FnMut(&VulkanHandle)>(device: &impl IsA<VulkanDevice>, type_: /*Ignored*/VulkanHandleType, handle: VulkanHandleTypedef, notify: P) -> VulkanHandle {
    //    unsafe { TODO: call ffi:gst_vulkan_handle_new_wrapped() }
    //}

    //#[doc(alias = "gst_vulkan_handle_free_descriptor_set_layout")]
    //pub fn free_descriptor_set_layout(&self, user_data: /*Unimplemented*/Option<Basic: Pointer>) {
    //    unsafe { TODO: call ffi:gst_vulkan_handle_free_descriptor_set_layout() }
    //}

    //#[doc(alias = "gst_vulkan_handle_free_framebuffer")]
    //pub fn free_framebuffer(&self, user_data: /*Unimplemented*/Option<Basic: Pointer>) {
    //    unsafe { TODO: call ffi:gst_vulkan_handle_free_framebuffer() }
    //}

    //#[doc(alias = "gst_vulkan_handle_free_pipeline")]
    //pub fn free_pipeline(&self, user_data: /*Unimplemented*/Option<Basic: Pointer>) {
    //    unsafe { TODO: call ffi:gst_vulkan_handle_free_pipeline() }
    //}

    //#[doc(alias = "gst_vulkan_handle_free_pipeline_layout")]
    //pub fn free_pipeline_layout(&self, user_data: /*Unimplemented*/Option<Basic: Pointer>) {
    //    unsafe { TODO: call ffi:gst_vulkan_handle_free_pipeline_layout() }
    //}

    //#[doc(alias = "gst_vulkan_handle_free_render_pass")]
    //pub fn free_render_pass(&self, user_data: /*Unimplemented*/Option<Basic: Pointer>) {
    //    unsafe { TODO: call ffi:gst_vulkan_handle_free_render_pass() }
    //}

    //#[doc(alias = "gst_vulkan_handle_free_sampler")]
    //pub fn free_sampler(&self, user_data: /*Unimplemented*/Option<Basic: Pointer>) {
    //    unsafe { TODO: call ffi:gst_vulkan_handle_free_sampler() }
    //}

    //#[doc(alias = "gst_vulkan_handle_free_shader")]
    //pub fn free_shader(&self, user_data: /*Unimplemented*/Option<Basic: Pointer>) {
    //    unsafe { TODO: call ffi:gst_vulkan_handle_free_shader() }
    //}
}

unsafe impl Send for VulkanHandle {}
unsafe impl Sync for VulkanHandle {}
