// This file was generated by gir (https://github.com/gtk-rs/gir)
// from gir-files (https://github.com/gtk-rs/gir-files)
// from gst-gir-files (https://gitlab.freedesktop.org/gstreamer/gir-files-rs.git)
// DO NOT EDIT

use crate::ffi;
use glib::translate::*;

glib::wrapper! {
    #[derive(Debug, PartialEq, Eq, PartialOrd, Ord, Hash)]
    pub struct D3D12AllocationParams(Boxed<ffi::GstD3D12AllocationParams>);

    match fn {
        copy => |ptr| ffi::gst_d3d12_allocation_params_copy(mut_override(ptr)),
        free => |ptr| ffi::gst_d3d12_allocation_params_free(ptr),
        type_ => || ffi::gst_d3d12_allocation_params_get_type(),
    }
}

impl D3D12AllocationParams {
    #[doc(alias = "gst_d3d12_allocation_params_set_array_size")]
    pub fn set_array_size(&mut self, size: u32) -> bool {
        unsafe {
            from_glib(ffi::gst_d3d12_allocation_params_set_array_size(
                self.to_glib_none_mut().0,
                size,
            ))
        }
    }

    #[doc(alias = "gst_d3d12_allocation_params_set_mip_levels")]
    pub fn set_mip_levels(&mut self, mip_levels: u32) -> bool {
        unsafe {
            from_glib(ffi::gst_d3d12_allocation_params_set_mip_levels(
                self.to_glib_none_mut().0,
                mip_levels,
            ))
        }
    }
}

unsafe impl Send for D3D12AllocationParams {}
unsafe impl Sync for D3D12AllocationParams {}
