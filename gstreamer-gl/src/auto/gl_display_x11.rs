// This file was generated by gir (https://github.com/gtk-rs/gir)
// from gir-files (https://github.com/gtk-rs/gir-files)
// DO NOT EDIT

use GLDisplay;
use ffi;
use glib::translate::*;
use gst;

glib_wrapper! {
    pub struct GLDisplayX11(Object<ffi::GstGLDisplayX11, ffi::GstGLDisplayX11Class, GLDisplayX11Class>) @extends GLDisplay, gst::Object;

    match fn {
        get_type => || ffi::gst_gl_display_x11_get_type(),
    }
}

impl GLDisplayX11 {
    pub fn new<'a, P: Into<Option<&'a str>>>(name: P) -> GLDisplayX11 {
        assert_initialized_main_thread!();
        let name = name.into();
        unsafe {
            from_glib_full(ffi::gst_gl_display_x11_new(name.to_glib_none().0))
        }
    }

    //pub fn new_with_display(display: /*Unimplemented*/Fundamental: Pointer) -> GLDisplayX11 {
    //    unsafe { TODO: call ffi::gst_gl_display_x11_new_with_display() }
    //}
}

unsafe impl Send for GLDisplayX11 {}
unsafe impl Sync for GLDisplayX11 {}
