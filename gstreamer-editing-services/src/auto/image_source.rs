// This file was generated by gir (https://github.com/gtk-rs/gir)
// from gir-files (https://github.com/gtk-rs/gir-files)
// from gst-gir-files (https://gitlab.freedesktop.org/gstreamer/gir-files-rs.git)
// DO NOT EDIT

use crate::{Extractable, MetaContainer, Source, TimelineElement, TrackElement, VideoSource};
use glib::{prelude::*, translate::*};

glib::wrapper! {
    #[doc(alias = "GESImageSource")]
    pub struct ImageSource(Object<ffi::GESImageSource, ffi::GESImageSourceClass>) @extends VideoSource, Source, TrackElement, TimelineElement, @implements Extractable, MetaContainer;

    match fn {
        type_ => || ffi::ges_image_source_get_type(),
    }
}

impl ImageSource {
    pub const NONE: Option<&'static ImageSource> = None;
}

mod sealed {
    pub trait Sealed {}
    impl<T: super::IsA<super::ImageSource>> Sealed for T {}
}

pub trait ImageSourceExt: IsA<ImageSource> + sealed::Sealed + 'static {
    fn uri(&self) -> Option<glib::GString> {
        ObjectExt::property(self.as_ref(), "uri")
    }
}

impl<O: IsA<ImageSource>> ImageSourceExt for O {}
