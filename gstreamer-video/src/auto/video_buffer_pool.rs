// This file was generated by gir (https://github.com/gtk-rs/gir)
// from gir-files (https://github.com/gtk-rs/gir-files)
// DO NOT EDIT

use glib::object::Cast;
use glib::translate::*;
use gst;
use gst_video_sys;

glib_wrapper! {
    pub struct VideoBufferPool(Object<gst_video_sys::GstVideoBufferPool, gst_video_sys::GstVideoBufferPoolClass, VideoBufferPoolClass>) @extends gst::BufferPool, gst::Object;

    match fn {
        get_type => || gst_video_sys::gst_video_buffer_pool_get_type(),
    }
}

impl VideoBufferPool {
    pub fn new() -> VideoBufferPool {
        assert_initialized_main_thread!();
        unsafe {
            gst::BufferPool::from_glib_full(gst_video_sys::gst_video_buffer_pool_new())
                .unsafe_cast()
        }
    }
}

impl Default for VideoBufferPool {
    fn default() -> Self {
        Self::new()
    }
}

unsafe impl Send for VideoBufferPool {}
unsafe impl Sync for VideoBufferPool {}

pub const NONE_VIDEO_BUFFER_POOL: Option<&VideoBufferPool> = None;
