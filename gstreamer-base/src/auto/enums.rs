// This file was generated by gir (https://github.com/gtk-rs/gir)
// from gir-files (https://github.com/gtk-rs/gir-files)
// DO NOT EDIT

use glib::translate::*;
use glib::value::FromValue;
use glib::value::FromValueOptional;
use glib::value::SetValue;
use glib::StaticType;
use glib::Type;

#[cfg(any(feature = "v1_18", feature = "dox"))]
#[cfg_attr(feature = "dox", doc(cfg(feature = "v1_18")))]
#[derive(Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Clone, Copy)]
#[non_exhaustive]
pub enum AggregatorStartTimeSelection {
    Zero,
    First,
    Set,
    #[doc(hidden)]
    __Unknown(i32),
}

#[cfg(any(feature = "v1_18", feature = "dox"))]
#[cfg_attr(feature = "dox", doc(cfg(feature = "v1_18")))]
#[doc(hidden)]
impl ToGlib for AggregatorStartTimeSelection {
    type GlibType = ffi::GstAggregatorStartTimeSelection;

    fn to_glib(&self) -> ffi::GstAggregatorStartTimeSelection {
        match *self {
            AggregatorStartTimeSelection::Zero => ffi::GST_AGGREGATOR_START_TIME_SELECTION_ZERO,
            AggregatorStartTimeSelection::First => ffi::GST_AGGREGATOR_START_TIME_SELECTION_FIRST,
            AggregatorStartTimeSelection::Set => ffi::GST_AGGREGATOR_START_TIME_SELECTION_SET,
            AggregatorStartTimeSelection::__Unknown(value) => value,
        }
    }
}

#[cfg(any(feature = "v1_18", feature = "dox"))]
#[cfg_attr(feature = "dox", doc(cfg(feature = "v1_18")))]
#[doc(hidden)]
impl FromGlib<ffi::GstAggregatorStartTimeSelection> for AggregatorStartTimeSelection {
    unsafe fn from_glib(value: ffi::GstAggregatorStartTimeSelection) -> Self {
        skip_assert_initialized!();
        match value {
            0 => AggregatorStartTimeSelection::Zero,
            1 => AggregatorStartTimeSelection::First,
            2 => AggregatorStartTimeSelection::Set,
            value => AggregatorStartTimeSelection::__Unknown(value),
        }
    }
}

#[cfg(any(feature = "v1_18", feature = "dox"))]
#[cfg_attr(feature = "dox", doc(cfg(feature = "v1_18")))]
impl StaticType for AggregatorStartTimeSelection {
    fn static_type() -> Type {
        unsafe { from_glib(ffi::gst_aggregator_start_time_selection_get_type()) }
    }
}

#[cfg(any(feature = "v1_18", feature = "dox"))]
#[cfg_attr(feature = "dox", doc(cfg(feature = "v1_18")))]
impl<'a> FromValueOptional<'a> for AggregatorStartTimeSelection {
    unsafe fn from_value_optional(value: &glib::Value) -> Option<Self> {
        Some(FromValue::from_value(value))
    }
}

#[cfg(any(feature = "v1_18", feature = "dox"))]
#[cfg_attr(feature = "dox", doc(cfg(feature = "v1_18")))]
impl<'a> FromValue<'a> for AggregatorStartTimeSelection {
    unsafe fn from_value(value: &glib::Value) -> Self {
        from_glib(glib::gobject_ffi::g_value_get_enum(value.to_glib_none().0))
    }
}

#[cfg(any(feature = "v1_18", feature = "dox"))]
#[cfg_attr(feature = "dox", doc(cfg(feature = "v1_18")))]
impl SetValue for AggregatorStartTimeSelection {
    unsafe fn set_value(value: &mut glib::Value, this: &Self) {
        glib::gobject_ffi::g_value_set_enum(value.to_glib_none_mut().0, this.to_glib())
    }
}
