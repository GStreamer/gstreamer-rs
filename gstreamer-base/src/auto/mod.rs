// This file was generated by gir (https://github.com/gtk-rs/gir)
// from gir-files (https://github.com/gtk-rs/gir-files)
// from gst-gir-files (https://gitlab.freedesktop.org/gstreamer/gir-files-rs.git)
// DO NOT EDIT

mod adapter;
pub use self::adapter::Adapter;

#[cfg(any(feature = "v1_14", feature = "dox"))]
#[cfg_attr(feature = "dox", doc(cfg(feature = "v1_14")))]
mod aggregator;
#[cfg(any(feature = "v1_14", feature = "dox"))]
#[cfg_attr(feature = "dox", doc(cfg(feature = "v1_14")))]
pub use self::aggregator::AggregatorExt;
#[cfg(any(feature = "v1_14", feature = "dox"))]
#[cfg_attr(feature = "dox", doc(cfg(feature = "v1_14")))]
pub use self::aggregator::{Aggregator, NONE_AGGREGATOR};

#[cfg(any(feature = "v1_14", feature = "dox"))]
#[cfg_attr(feature = "dox", doc(cfg(feature = "v1_14")))]
mod aggregator_pad;
#[cfg(any(feature = "v1_14", feature = "dox"))]
#[cfg_attr(feature = "dox", doc(cfg(feature = "v1_14")))]
pub use self::aggregator_pad::AggregatorPadExt;
#[cfg(any(feature = "v1_14", feature = "dox"))]
#[cfg_attr(feature = "dox", doc(cfg(feature = "v1_14")))]
pub use self::aggregator_pad::{AggregatorPad, NONE_AGGREGATOR_PAD};

mod base_parse;
pub use self::base_parse::BaseParseExt;
pub use self::base_parse::{BaseParse, NONE_BASE_PARSE};

mod base_sink;
pub use self::base_sink::BaseSinkExt;
pub use self::base_sink::{BaseSink, NONE_BASE_SINK};

mod base_src;
pub use self::base_src::BaseSrcExt;
pub use self::base_src::{BaseSrc, NONE_BASE_SRC};

mod base_transform;
pub use self::base_transform::BaseTransformExt;
pub use self::base_transform::{BaseTransform, NONE_BASE_TRANSFORM};

mod push_src;
pub use self::push_src::{PushSrc, NONE_PUSH_SRC};

mod enums;
#[cfg(any(feature = "v1_18", feature = "dox"))]
#[cfg_attr(feature = "dox", doc(cfg(feature = "v1_18")))]
pub use self::enums::AggregatorStartTimeSelection;

mod flags;
pub use self::flags::BaseParseFrameFlags;

pub mod functions;

#[doc(hidden)]
pub mod traits {
    #[cfg(any(feature = "v1_14", feature = "dox"))]
    #[cfg_attr(feature = "dox", doc(cfg(feature = "v1_14")))]
    pub use super::AggregatorExt;
    #[cfg(any(feature = "v1_14", feature = "dox"))]
    #[cfg_attr(feature = "dox", doc(cfg(feature = "v1_14")))]
    pub use super::AggregatorPadExt;
    pub use super::BaseParseExt;
    pub use super::BaseSinkExt;
    pub use super::BaseSrcExt;
    pub use super::BaseTransformExt;
}
